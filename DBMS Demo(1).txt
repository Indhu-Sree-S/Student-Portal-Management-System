DROP TRIGGER TR1_ADMIN;
DROP TRIGGER TR2_ADMIN;
DROP TRIGGER CON_GRADE;
DROP TABLE STUD_REGISTER;
DROP TABLE ST_HANDLE;
DROP TABLE STUD_MARK;
DROP TABLE COURSE;
DROP TABLE STAFF;
DROP TABLE STUDENT;

***************************************************************************
TABLE CREATION:


CREATE TABLE STUDENT
(SID 	CHAR(7) 	NOT NULL,
SNAME 	VARCHAR2(20) 	NOT NULL,
SPASS 	VARCHAR2(20) 	DEFAULT 'PASSWORD' NOT NULL,
CLASS 	VARCHAR2(20) 	NOT NULL,
JYEAR 	CHAR(4) 	NOT NULL,
INSBY 	CHAR(7) 	NOT NULL,
PRIMARY KEY(SID));



CREATE TABLE STAFF
(STID 	CHAR(7) 	NOT NULL,
STNAME 	VARCHAR2(20) 	NOT NULL,
STP 	VARCHAR2(20) 	DEFAULT 'PASSWORD' NOT NULL,
YOJOIN 	CHAR(4) 	NOT NULL,
INSBY 	CHAR(7) 	NOT NULL,
PRIMARY KEY(STID));



CREATE TABLE COURSE
(CID 	CHAR(7) 	NOT NULL,
CNAME 	VARCHAR2(20) 	NOT NULL,
PRIMARY KEY(CID));



CREATE TABLE STUD_REGISTER
(SID 	CHAR(7) 	NOT NULL,
CID 	CHAR(7) 	NOT NULL,
SEM 	NUMBER 		NOT NULL,
GRADE 	CHAR(2),
PRIMARY KEY(SID,CID),
FOREIGN KEY(SID) REFERENCES STUDENT(SID) 
ON DELETE CASCADE,
FOREIGN KEY(CID) REFERENCES COURSE(CID) 
ON DELETE CASCADE);



CREATE TABLE STUD_MARK
(SID 	CHAR(7) 	NOT NULL,
CID 	CHAR(7) 	NOT NULL,
MARK 	NUMBER,
CLASS 	VARCHAR2(20) 	NOT NULL,
SEM 	NUMBER 		NOT NULL,
PRIMARY KEY(SID,CID),
FOREIGN KEY(SID) REFERENCES STUDENT(SID) 
ON DELETE CASCADE,
FOREIGN KEY(CID) REFERENCES COURSE(CID) 
ON DELETE CASCADE);



CREATE TABLE ST_HANDLE
(STID 	CHAR(7) 	NOT NULL,
CID 	CHAR(7) 	NOT NULL,
SEM 	NUMBER 		NOT NULL,
YEAR 	CHAR(4) 	NOT NULL,
PRIMARY KEY(STID,CID),
FOREIGN KEY(STID) REFERENCES STAFF(STID) 
ON DELETE CASCADE,
FOREIGN KEY(CID) REFERENCES COURSE(CID));



****************************************************************************
TABLE VALUES:


INSERT INTO STUDENT VALUES(1831040,'RASIKA',1831040,'SS',2018,1234567);
INSERT INTO STUDENT VALUES(1832023,'INDHU',1832023,'DS',2018,1234567);
INSERT INTO STUDENT VALUES(1833025,'MEGA',1833025,'DCS',2018,1234567);
INSERT INTO STUDENT VALUES(1832009,'ARTHI',1832009,'DS',2018,1234567);
INSERT INTO STUDENT VALUES(1932008,'ANU',1932008,'DS',2019,1234567);
INSERT INTO STUDENT VALUES(1931001,'ABHI',1931001,'SS',2019,1234567);
INSERT INTO STUDENT VALUES(1933021,'MADHU',1933021,'DCS',2019,1234567);
INSERT INTO STUDENT VALUES(1731004,'KAARTHI',1731004,'SS',2017,1234567);
INSERT INTO STUDENT VALUES(1733020,'NIVI',1733020,'DCS',2017,1234567);
INSERT INTO STUDENT VALUES(1832024,'KAVI',1832024,'DS',2018,1234567);


INSERT INTO STAFF VALUES(1234567,'ADMIN','ADMIN07',1947,1234567);
INSERT INTO STAFF VALUES('STF0001','JOHN','STF0001',2000,1234567);
INSERT INTO STAFF VALUES('STF0002','RAVI','STF0002',2003,1234567);
INSERT INTO STAFF VALUES('STF0003','PAAVAI','STF0003',2008,1234567);
INSERT INTO STAFF VALUES('STF0004','ALEX','STF0004',2011,1234567);
INSERT INTO STAFF VALUES('STF0005','AFFRIN','STF0005',2010,1234567);
INSERT INTO STAFF VALUES('STF0006','SARAH','STF0006',2009,1234567);
INSERT INTO STAFF VALUES('STF0007','RAVI','STF0007',2003,1234567);
INSERT INTO STAFF VALUES('STF0008','JEMI','STF0008',2007,1234567);
INSERT INTO STAFF VALUES('STF0009','SRI','STF0009',2017,1234567);


INSERT INTO COURSE VALUES('MDS23','OS');
INSERT INTO COURSE VALUES('MDS20','CA');
INSERT INTO COURSE VALUES('MDS22','DSAT');
INSERT INTO COURSE VALUES('MSS16','ADS');
INSERT INTO COURSE VALUES('MSS15','VB');
INSERT INTO COURSE VALUES('MDCS7','WEB');
INSERT INTO COURSE VALUES('MDCS4','C++');


INSERT INTO COURSE VALUES('MDS23','OS');
INSERT INTO COURSE VALUES('MDS20','CA');
INSERT INTO COURSE VALUES('MDS22','DSAT');
INSERT INTO COURSE VALUES('MSS16','ADS');
INSERT INTO COURSE VALUES('MSS15','VB');
INSERT INTO COURSE VALUES('MDCS7','WEB');
INSERT INTO COURSE VALUES('MDCS4','C++');


INSERT INTO STUD_REGISTER VALUES(1831040,'MSS16',3,null);
INSERT INTO STUD_REGISTER VALUES(1831040,'MSS15',3,null);
INSERT INTO STUD_REGISTER VALUES(1832023,'MDS23',3,null);
INSERT INTO STUD_REGISTER VALUES(1832023,'MDS20',3,null);
INSERT INTO STUD_REGISTER VALUES(1733020,'MDCS7',5,null);
INSERT INTO STUD_REGISTER VALUES(1733020,'MDCS4',5,null);
INSERT INTO STUD_REGISTER VALUES(1832009,'MDS23',3,null);
INSERT INTO STUD_REGISTER VALUES(1832009,'MDS20',3,null);
INSERT INTO STUD_REGISTER VALUES(1832009,'MDS22',3,null);


INSERT INTO STUD_MARK VALUES(1831040,'MSS16',95,'SS',3);
INSERT INTO STUD_MARK VALUES(1831040,'MSS15',84,'SS',3);
INSERT INTO STUD_MARK VALUES(1832023,'MDS23',63,'DS',3);
INSERT INTO STUD_MARK VALUES(1832023,'MDS20',59,'DS',3);
INSERT INTO STUD_MARK VALUES(1733020,'MDCS7',75,'DCS',5);
INSERT INTO STUD_MARK VALUES(1733020,'MDCS4',79,'DCS',5);
INSERT INTO STUD_MARK VALUES(1832009,'MDS23',68,'DS',3);
INSERT INTO STUD_MARK VALUES(1832009,'MDS20',49,'DS',3);
INSERT INTO STUD_MARK VALUES(1832009,'MDS22',57,'DS',3);


INSERT INTO ST_HANDLE VALUES('STF0001','MDS23',3,2018);
INSERT INTO ST_HANDLE VALUES('STF0002','MDS20',3,2018);
INSERT INTO ST_HANDLE VALUES('STF0003','MDS22',3,2018);
INSERT INTO ST_HANDLE VALUES('STF0004','MSS16',3,2018);
INSERT INTO ST_HANDLE VALUES('STF0005','MSS15',3,2018);
INSERT INTO ST_HANDLE VALUES('STF0006','MDCS7',5,2018);
INSERT INTO ST_HANDLE VALUES('STF0007','MDCS4',5,2018);


****************************************************************************

SELECT * FROM STUD_REGISTER;
SELECT * FROM STUDENT;
SELECT * FROM ST_HANDLE;
SELECT * FROM COURSE;
SELECT * FROM STAFF;
SELECT * FROM STUD_MARK;

****************************************************************************
PROCEDURE/FUNCTION:


CREATE OR REPLACE PROCEDURE STAFFP(TSID IN VARCHAR2,
TCID IN VARCHAR2,TMARK IN NUMBER)
IS
BEGIN
UPDATE STUD_MARK SET MARK=TMARK
WHERE SID=TSID
AND CID=TCID;
END;
/


CREATE OR REPLACE FUNCTION STUDP(TSID IN VARCHAR2)
RETURN VARCHAR2
IS
G 	CHAR(2);
BEGIN
SELECT GRADE INTO G
FROM STUD_REGISTER
WHERE SID=TSID;
RETURN('YOUR GRADE OF THIS SEMESTER: ' ||G);

END;
/


CREATE OR REPLACE PROCEDURE AD_STUD(TSID IN VARCHAR2,
TNAME IN VARCHAR2,TCLASS IN VARCHAR2,TYEAR IN VARCHAR2)
IS
BEGIN
INSERT INTO STUDENT VALUES(TSID,TNAME,null,TCLASS,TYEAR,1234567);

END;
/

CREATE OR REPLACE PROCEDURE AD_STAFF(TSTID IN VARCHAR2,
TNAME IN VARCHAR2,TYEAR IN VARCHAR2)
IS
BEGIN
INSERT INTO STAFF VALUES(TSTID,TNAME,null,TYEAR,1234567);

END;
/


CREATE OR REPLACE FUNCTION LOGIN_CHECK(TID IN VARCHAR2,TPASS IN VARCHAR2,
CHOICE OUT NUMBER)
RETURN NUMBER
IS
ID 	VARCHAR2(7);

BEGIN

SELECT SID INTO ID
FROM STUDENT
WHERE SID = TID
AND SPASS = TPASS;

IF ID = TID THEN
CHOICE := 2;

ELSE

SELECT STID INTO ID
FROM STAFF
WHERE STID=TID
AND STP=TPASS;

IF ID = TID THEN
CHOICE := 3;

ELSIF TID=1234567 THEN
IF TPASS='ADMIN07' THEN
CHOICE := 1;
END IF;
END IF;
END IF;

RETURN(CHOICE);
END;
/

****************************************************************************
MENU:


SET SERVEROUTPUT ON;
DECLARE
CHOICE 		NUMBER;
ID 		CHAR(7);
PASSWORD 	VARCHAR2(20);

BEGIN
DBMS_OUTPUT.PUT_LINE('STUDENT RESULT MANAGEMENT SYSTEM');
ID := '&ID';
PASSWORD := '&PASSWORD';
CHOICE := LOGIN_CHECK(ID,PASSWORD,CHOICE);
CASE CHOICE
WHEN 1 THEN
DBMS_OUTPUT.PUT_LINE('ADMIN');
WHEN 2 THEN
DBMS_OUTPUT.PUT_LINE('STUDENT');
WHEN 3 THEN
DBMS_OUTPUT.PUT_LINE('STAFF');
END CASE;
END;
/


*****************************************************************************
INDEX:

CREATE INDEX IND1
ON STUD_REGISTER(SID);

CREATE INDEX IND2
ON ST_HANDLE(STID);

CREATE INDEX IND3
ON STUD_MARK(CID);

*****************************************************************************
TRIGGER:

CREATE OR REPLACE TRIGGER TR1_ADMIN
BEFORE INSERT ON STAFF
FOR EACH ROW
BEGIN
IF NOT (:NEW.INSBY IN (1234567))
THEN RAISE_APPLICATION_ERROR(-20201,'SORRY! YOU CAN NOT INSERT THE DETAILS. 
ONLY ADMIN CAN INSERT THE DETAILS OF STAFF!');
END IF;
END;
/

CREATE OR REPLACE TRIGGER TR2_ADMIN
BEFORE INSERT ON STUDENT
FOR EACH ROW
BEGIN
IF NOT (:NEW.INSBY IN (1234567))
THEN RAISE_APPLICATION_ERROR(-20202,'SORRY! YOU CAN NOT INSERT THE DETAILS. 
ONLY ADMIN CAN INSERT THE DETAILS OF STUDENT!');
END IF;
END;
/


CREATE OR REPLACE TRIGGER CON_GRADE
AFTER INSERT OR UPDATE ON STUD_MARK
FOR EACH ROW
BEGIN
IF (:NEW.MARK>90) THEN
UPDATE STUD_REGISTER SET GRADE='O'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
ELSIF (:NEW.MARK>80) THEN
UPDATE STUD_REGISTER SET GRADE='A+'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
ELSIF (:NEW.MARK>70) THEN
UPDATE STUD_REGISTER SET GRADE='A'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
ELSIF (:NEW.MARK>60) THEN
UPDATE STUD_REGISTER SET GRADE='B+'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
ELSIF (:NEW.MARK>50) THEN
UPDATE STUD_REGISTER SET GRADE='B'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
ELSIF (:NEW.MARK>10) THEN
UPDATE STUD_REGISTER SET GRADE='F'
WHERE SID=:NEW.SID
AND CID=:NEW.CID;
END IF;
END;
/

*****************************************************************************

SET PAGESIZE 30 
SET TTITLE 'STUDENT RESULT'
SET BTITLE 'ABOVE COURSES ARE DONE BY THE STUDENT'
SELECT CID,GRADE FROM STUD_REGISTER
WHERE SID='&SID'
AND SEM='&SEM';